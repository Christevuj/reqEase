{
  "version": 3,
  "sources": ["../../primevue/metergroup/style/metergroupstyle.esm.js", "../../primevue/metergroup/metergroup.esm.js"],
  "sourcesContent": ["import BaseStyle from 'primevue/base/style';\r\n\r\nvar classes = {\r\n  root: function root(_ref) {\r\n    var props = _ref.props;\r\n    return ['p-metergroup p-component', {\r\n      'p-metergroup-horizontal': props.orientation === 'horizontal',\r\n      'p-metergroup-vertical': props.orientation === 'vertical'\r\n    }];\r\n  },\r\n  metercontainer: 'p-metergroup-meters',\r\n  meter: 'p-metergroup-meter',\r\n  labellist: function labellist(_ref2) {\r\n    var props = _ref2.props;\r\n    return ['p-metergroup-labels', {\r\n      'p-metergroup-labels-vertical': props.labelOrientation === 'vertical',\r\n      'p-metergroup-labels-horizontal': props.labelOrientation === 'horizontal'\r\n    }];\r\n  },\r\n  labellistitem: 'p-metergroup-label',\r\n  labelicon: 'p-metergroup-label-icon',\r\n  labellisttype: 'p-metergroup-label-marker',\r\n  label: 'p-metergroup-label-text'\r\n};\r\nvar MeterGroupStyle = BaseStyle.extend({\r\n  name: 'metergroup',\r\n  classes: classes\r\n});\r\n\r\nexport { MeterGroupStyle as default };\r\n", "import BaseComponent from 'primevue/basecomponent';\r\nimport MeterGroupStyle from 'primevue/metergroup/style';\r\nimport { openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, normalizeClass, createElementVNode, toDisplayString, resolveComponent, createVNode, createCommentVNode } from 'vue';\r\n\r\nvar script$2 = {\r\n  name: 'MeterGroup',\r\n  \"extends\": BaseComponent,\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      \"default\": null\r\n    },\r\n    min: {\r\n      type: Number,\r\n      \"default\": 0\r\n    },\r\n    max: {\r\n      type: Number,\r\n      \"default\": 100\r\n    },\r\n    orientation: {\r\n      type: String,\r\n      \"default\": 'horizontal'\r\n    },\r\n    labelPosition: {\r\n      type: String,\r\n      \"default\": 'end'\r\n    },\r\n    labelOrientation: {\r\n      type: String,\r\n      \"default\": 'horizontal'\r\n    }\r\n  },\r\n  style: MeterGroupStyle,\r\n  provide: function provide() {\r\n    return {\r\n      $parentInstance: this\r\n    };\r\n  }\r\n};\r\n\r\nvar script$1 = {\r\n  name: 'MeterGroupLabel',\r\n  hostName: 'MeterGroup',\r\n  \"extends\": BaseComponent,\r\n  inheritAttrs: false,\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      \"default\": null\r\n    },\r\n    labelPosition: {\r\n      type: String,\r\n      \"default\": 'end'\r\n    },\r\n    labelOrientation: {\r\n      type: String,\r\n      \"default\": 'horizontal'\r\n    }\r\n  }\r\n};\r\n\r\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\r\n  return openBlock(), createElementBlock(\"ol\", mergeProps({\r\n    \"class\": _ctx.cx('labellist')\r\n  }, _ctx.ptm('labellist')), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.value, function (val, index) {\r\n    return openBlock(), createElementBlock(\"li\", mergeProps({\r\n      key: index + '_label',\r\n      \"class\": _ctx.cx('labellistitem')\r\n    }, _ctx.ptm('labellistitem')), [renderSlot(_ctx.$slots, \"icon\", {\r\n      value: val,\r\n      \"class\": normalizeClass(_ctx.cx('labelicon'))\r\n    }, function () {\r\n      return [val.icon ? (openBlock(), createElementBlock(\"i\", mergeProps({\r\n        key: 0,\r\n        \"class\": [val.icon, _ctx.cx('labelicon')],\r\n        style: {\r\n          color: val.color\r\n        }\r\n      }, _ctx.ptm('labelicon')), null, 16)) : (openBlock(), createElementBlock(\"span\", mergeProps({\r\n        key: 1,\r\n        \"class\": _ctx.cx('labellisttype'),\r\n        style: {\r\n          backgroundColor: val.color\r\n        }\r\n      }, _ctx.ptm('labellisttype')), null, 16))];\r\n    }), createElementVNode(\"span\", mergeProps({\r\n      \"class\": _ctx.cx('label')\r\n    }, _ctx.ptm('label')), toDisplayString(val.label) + \" (\" + toDisplayString(_ctx.$parentInstance.percentValue(val.value)) + \")\", 17)], 16);\r\n  }), 128))], 16);\r\n}\r\n\r\nscript$1.render = render$1;\r\n\r\nvar script = {\r\n  name: 'MeterGroup',\r\n  \"extends\": script$2,\r\n  inheritAttrs: false,\r\n  methods: {\r\n    getPTOptions: function getPTOptions(key, value, index) {\r\n      return this.ptm(key, {\r\n        context: {\r\n          value: value,\r\n          index: index\r\n        }\r\n      });\r\n    },\r\n    percent: function percent() {\r\n      var meter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n      var percentOfItem = (meter - this.min) / (this.max - this.min) * 100;\r\n      return Math.round(Math.max(0, Math.min(100, percentOfItem)));\r\n    },\r\n    percentValue: function percentValue(meter) {\r\n      return this.percent(meter) + '%';\r\n    },\r\n    meterCalculatedStyles: function meterCalculatedStyles(val) {\r\n      return {\r\n        backgroundColor: val.color,\r\n        width: this.orientation === 'horizontal' && this.percentValue(val.value),\r\n        height: this.orientation === 'vertical' && this.percentValue(val.value)\r\n      };\r\n    }\r\n  },\r\n  computed: {\r\n    totalPercent: function totalPercent() {\r\n      return this.percent(this.value.reduce(function (total, val) {\r\n        return total + val.value;\r\n      }, 0));\r\n    },\r\n    percentages: function percentages() {\r\n      var sum = 0;\r\n      var sumsArray = [];\r\n      this.value.forEach(function (item) {\r\n        sum += item.value;\r\n        sumsArray.push(sum);\r\n      });\r\n      return sumsArray;\r\n    }\r\n  },\r\n  components: {\r\n    MeterGroupLabel: script$1\r\n  }\r\n};\r\n\r\nvar _hoisted_1 = [\"aria-valuemin\", \"aria-valuemax\", \"aria-valuenow\"];\r\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\r\n  var _component_MeterGroupLabel = resolveComponent(\"MeterGroupLabel\");\r\n  return openBlock(), createElementBlock(\"div\", mergeProps({\r\n    \"class\": _ctx.cx('root'),\r\n    role: \"meter\",\r\n    \"aria-valuemin\": _ctx.min,\r\n    \"aria-valuemax\": _ctx.max,\r\n    \"aria-valuenow\": $options.totalPercent\r\n  }, _ctx.ptmi('root')), [_ctx.labelPosition === 'start' ? renderSlot(_ctx.$slots, \"label\", {\r\n    key: 0,\r\n    value: _ctx.value,\r\n    totalPercent: $options.totalPercent,\r\n    percentages: $options.percentages\r\n  }, function () {\r\n    return [createVNode(_component_MeterGroupLabel, {\r\n      value: _ctx.value,\r\n      labelPosition: _ctx.labelPosition,\r\n      labelOrientation: _ctx.labelOrientation,\r\n      unstyled: _ctx.unstyled,\r\n      pt: _ctx.pt\r\n    }, null, 8, [\"value\", \"labelPosition\", \"labelOrientation\", \"unstyled\", \"pt\"])];\r\n  }) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"start\", {\r\n    value: _ctx.value,\r\n    totalPercent: $options.totalPercent,\r\n    percentages: $options.percentages\r\n  }), createElementVNode(\"div\", mergeProps({\r\n    \"class\": _ctx.cx('metercontainer')\r\n  }, _ctx.ptm('metercontainer')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.value, function (val, index) {\r\n    return renderSlot(_ctx.$slots, \"meter\", {\r\n      key: index,\r\n      value: val,\r\n      index: index,\r\n      \"class\": normalizeClass(_ctx.cx('meter')),\r\n      orientation: _ctx.orientation,\r\n      size: $options.percentValue(val.value),\r\n      totalPercent: $options.totalPercent\r\n    }, function () {\r\n      return [$options.percent(val.value) ? (openBlock(), createElementBlock(\"span\", mergeProps({\r\n        key: 0,\r\n        \"class\": _ctx.cx('meter'),\r\n        style: $options.meterCalculatedStyles(val)\r\n      }, $options.getPTOptions('meter', val, index)), null, 16)) : createCommentVNode(\"\", true)];\r\n    });\r\n  }), 128))], 16), renderSlot(_ctx.$slots, \"end\", {\r\n    value: _ctx.value,\r\n    totalPercent: $options.totalPercent,\r\n    percentages: $options.percentages\r\n  }), _ctx.labelPosition === 'end' ? renderSlot(_ctx.$slots, \"label\", {\r\n    key: 1,\r\n    value: _ctx.value,\r\n    totalPercent: $options.totalPercent,\r\n    percentages: $options.percentages\r\n  }, function () {\r\n    return [createVNode(_component_MeterGroupLabel, {\r\n      value: _ctx.value,\r\n      labelPosition: _ctx.labelPosition,\r\n      labelOrientation: _ctx.labelOrientation,\r\n      unstyled: _ctx.unstyled,\r\n      pt: _ctx.pt\r\n    }, null, 8, [\"value\", \"labelPosition\", \"labelOrientation\", \"unstyled\", \"pt\"])];\r\n  }) : createCommentVNode(\"\", true)], 16, _hoisted_1);\r\n}\r\n\r\nscript.render = render;\r\n\r\nexport { script as default };\r\n"],
  "mappings": "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",
  "names": ["script"]
}
