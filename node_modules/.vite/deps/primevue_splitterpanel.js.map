{
  "version": 3,
  "sources": ["../../primevue/splitterpanel/style/splitterpanelstyle.esm.js", "../../primevue/splitterpanel/splitterpanel.esm.js"],
  "sourcesContent": ["import BaseStyle from 'primevue/base/style';\r\n\r\nvar classes = {\r\n  root: function root(_ref) {\r\n    var instance = _ref.instance;\r\n    return ['p-splitter-panel', {\r\n      'p-splitter-panel-nested': instance.isNested\r\n    }];\r\n  }\r\n};\r\nvar SplitterPanelStyle = BaseStyle.extend({\r\n  name: 'splitterpanel',\r\n  classes: classes\r\n});\r\n\r\nexport { SplitterPanelStyle as default };\r\n", "import BaseComponent from 'primevue/basecomponent';\r\nimport SplitterPanelStyle from 'primevue/splitterpanel/style';\r\nimport { openBlock, createElementBlock, mergeProps, renderSlot } from 'vue';\r\n\r\nvar script$1 = {\r\n  name: 'BaseSplitterPanel',\r\n  \"extends\": BaseComponent,\r\n  props: {\r\n    size: {\r\n      type: Number,\r\n      \"default\": null\r\n    },\r\n    minSize: {\r\n      type: Number,\r\n      \"default\": null\r\n    }\r\n  },\r\n  style: SplitterPanelStyle,\r\n  provide: function provide() {\r\n    return {\r\n      $parentInstance: this\r\n    };\r\n  }\r\n};\r\n\r\nvar script = {\r\n  name: 'SplitterPanel',\r\n  \"extends\": script$1,\r\n  inheritAttrs: false,\r\n  data: function data() {\r\n    return {\r\n      nestedState: null\r\n    };\r\n  },\r\n  computed: {\r\n    isNested: function isNested() {\r\n      var _this = this;\r\n      return this.$slots[\"default\"]().some(function (child) {\r\n        _this.nestedState = child.type.name === 'Splitter' ? true : null;\r\n        return _this.nestedState;\r\n      });\r\n    },\r\n    getPTOptions: function getPTOptions() {\r\n      return {\r\n        context: {\r\n          nested: this.isNested\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\r\n  return openBlock(), createElementBlock(\"div\", mergeProps({\r\n    ref: \"container\",\r\n    \"class\": _ctx.cx('root')\r\n  }, _ctx.ptmi('root', $options.getPTOptions)), [renderSlot(_ctx.$slots, \"default\")], 16);\r\n}\r\n\r\nscript.render = render;\r\n\r\nexport { script as default };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAEA,IAAI,UAAU;AAAA,EACZ,MAAM,SAAS,KAAK,MAAM;AACxB,QAAI,WAAW,KAAK;AACpB,WAAO,CAAC,oBAAoB;AAAA,MAC1B,2BAA2B,SAAS;AAAA,IACtC,CAAC;AAAA,EACH;AACF;AACA,IAAI,qBAAqB,UAAU,OAAO;AAAA,EACxC,MAAM;AAAA,EACN;AACF,CAAC;;;ACTD,IAAI,WAAW;AAAA,EACb,MAAM;AAAA,EACN,WAAW;AAAA,EACX,OAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AAAA,EACF;AAAA,EACA,OAAO;AAAA,EACP,SAAS,SAAS,UAAU;AAC1B,WAAO;AAAA,MACL,iBAAiB;AAAA,IACnB;AAAA,EACF;AACF;AAEA,IAAIA,UAAS;AAAA,EACX,MAAM;AAAA,EACN,WAAW;AAAA,EACX,cAAc;AAAA,EACd,MAAM,SAAS,OAAO;AACpB,WAAO;AAAA,MACL,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,UAAU;AAAA,IACR,UAAU,SAAS,WAAW;AAC5B,UAAI,QAAQ;AACZ,aAAO,KAAK,OAAO,SAAS,EAAE,EAAE,KAAK,SAAU,OAAO;AACpD,cAAM,cAAc,MAAM,KAAK,SAAS,aAAa,OAAO;AAC5D,eAAO,MAAM;AAAA,MACf,CAAC;AAAA,IACH;AAAA,IACA,cAAc,SAAS,eAAe;AACpC,aAAO;AAAA,QACL,SAAS;AAAA,UACP,QAAQ,KAAK;AAAA,QACf;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,OAAO,MAAM,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AAC7D,SAAO,UAAU,GAAG,mBAAmB,OAAO,WAAW;AAAA,IACvD,KAAK;AAAA,IACL,SAAS,KAAK,GAAG,MAAM;AAAA,EACzB,GAAG,KAAK,KAAK,QAAQ,SAAS,YAAY,CAAC,GAAG,CAAC,WAAW,KAAK,QAAQ,SAAS,CAAC,GAAG,EAAE;AACxF;AAEAA,QAAO,SAAS;",
  "names": ["script"]
}
